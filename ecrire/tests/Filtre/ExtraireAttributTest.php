<?php

declare(strict_types=1);

namespace Spip\Test\Filtre;

use PHPUnit\Framework\Attributes\DataProvider;
use PHPUnit\Framework\TestCase;

class ExtraireAttributTest extends TestCase
{
	public static function setUpBeforeClass(): void {
		find_in_path('inc/filtres.php', '', true);
	}

	#[DataProvider('providerExtraireAttribut')]
	public function testExtraireAttribut($expected, ...$args): void {
		$actual = extraire_attribut(...$args);
		$this->assertSame($expected, $actual);
	}

	public static function providerExtraireAttribut(): array {
		find_in_path('inc/filtres.php', '', true);
		return [
			'img-src' => [
				'expected' => 'sha\'dok',
				'balise' => '<img src="sha\'dok" width="10" height=100 />',
				'attribut' => 'src',
			],
			'img-width' => [
				'expected' => '10',
				'balise' => '<img src="sha\'dok" width="10" height=100 />',
				'attribut' => 'width',
			],
			'img-height' => [
				'expected' => '100',
				'balise' => '<img src="sha\'dok" width="10" height=100 />',
				'attribut' => 'height',
			],
			'img-entites' => [
				'expected' => '"&\'',
				'balise' => inserer_attribut('<img width=10>', 'src', '"&\''),
				'attribut' => 'src',
			],
			'img-entites-width' => [
				'expected' => '10',
				'balise' => inserer_attribut('<img width=10>', 'src', '"&\''),
				'attribut' => 'width',
			],
			// Dans les crayons on s'etait fait avoir par un titre
			// qui valait "<span class="color:xxx;">Titre</span>
			// et que inserer_attribut detruisait en inserant a tort
			// le style='width:560px' dans l'attribut value="" du <input/>
			// (bon je sais c'est pas clair)
			'attribut imbrique' => [
				'expected' => '<span style="color:red;">ho</span>',
				'balise' => inserer_attribut(
					inserer_attribut('<input />', 'value', '<span style="color:red;">ho</span>'),
					'style',
					'width: 120px;'
				),
				'attribut' => 'value',
			],
			// attribut autodefini
			'attribut autodefini #1' => [
				'expected' => 'checked',
				'balise' => '<input checked />',
				'attribut' => 'checked',
			],
			'attribut autodefini #2' => [
				'expected' => 'checked',
				'balise' => '<input checked/>',
				'attribut' => 'checked',
			],
			'attribut autodefini #3' => [
				'expected' => 'checked',
				'balise' => '<input checked>',
				'attribut' => 'checked',
			],
			// inserer un attribut deja existant
			'remplacement attribut' => [
				'expected' => 'b',
				'balise' => inserer_attribut('<img src="a" width=12>', 'src', 'b'),
				'attribut' => 'src',
			],
			// Ne pas confondre "", "0" et attribut autodefini
			'title=\'\'' => [
				'expected' => '',
				'balise' => '<a title=\'\'>',
				'attribut' => 'title',
			],
			'title=""' => [
				'expected' => '',
				'balise' => '<a title="">',
				'attribut' => 'title',
			],
			'width=0' => [
				'expected' => '0',
				'balise' => '<img width=0>',
				'attribut' => 'width',
			],
			'width=\'0\'' => [
				'expected' => '0',
				'balise' => '<img width=\'0\'>',
				'attribut' => 'width',
			],
			'width="0"' => [
				'expected' => '0',
				'balise' => '<img width="0">',
				'attribut' => 'width',
			],
			// extraire un attribut d'une balise xml:truc :
			'xml:deuxpoints' => [
				'expected' => 'a',
				'balise' => '<chose:truc machin=\'a\'/>',
				'attribut' => 'machin',
			],
			// manipuler des listes de balises
			'liste' => [
				'expected' => ['a', 'b'],
				'balise' => ['<chose machin="a"/>', '<chose machin="b"/>'],
				'attribut' => 'machin',
			],
			// ne pas confondre dâ€™attribut
			'nom attribut partiel #1' => [
				'expected' => null,
				'balise' => '<img mysrc="test">',
				'attribut' => 'src',
			],
			'nom attribut partiel #2' => [
				'expected' => null,
				'balise' => '<img src-alt="test">',
				'attribut' => 'src',
			],
			'nom attribut partiel #3' => [
				'expected' => null,
				'balise' => '<img data-src="test">',
				'attribut' => 'src',
			],
			// Attrapper un attribut d'un tag interne (oui oui)...
			'extraction tag interne' => [
				'expected' => 'image',
				'balise' => '<a href="url"><img src="image" /></a>',
				'attribut' => 'src',
			],
			// autoriser les points et tirets dans les attributs
			'points et tirets #1' => [
				'expected' => '1',
				'balise' => '<bidule chose.truc="yo" machin-lol="ouais" toto="1" />',
				'attribut' => 'toto',
			],
			'points et tirets #2' => [
				'expected' => 'yo',
				'balise' => '<bidule chose.truc="yo" machin-lol="ouais" toto="1" />',
				'attribut' => 'chose.truc',
			],
			'points et tirets #3' => [
				'expected' => 'ouais',
				'balise' => '<bidule chose.truc="yo" machin-lol="ouais" toto="1" />',
				'attribut' => 'machin-lol',
			],
			'tirets et pas tirets #1' => [
				'expected' => 'a',
				'balise' => '<bidule toto-a="a" toto="1" toto-b="b" />',
				'attribut' => 'toto-a',
			],
			'tirets et pas tirets #2' => [
				'expected' => 'b',
				'balise' => '<bidule toto-a="a" toto="1" toto-b="b" />',
				'attribut' => 'toto-b',
			],
			'tirets et pas tirets #3' => [
				'expected' => '1',
				'balise' => '<bidule toto-a="a" toto="1" toto-b="b" />',
				'attribut' => 'toto',
			],
		];
	}

	public function testExtraireAttributSpecial() {
		$this->assertStringNotContainsString(
			'x',
			inserer_attribut('<a><img src="x"/></a>', 'src', 'y'),
			'erreur remplacement tag interne'
		);

		$balise = <<<HTML
			<img
				src='sites/sunny/local/cache-gd2/648a4f8c1b5f8885415bc80228800d87.png'
				width='96' height='96' style='height:96px;width:96px;'
				class='format_png' />
			HTML;
		$this->assertSame(
			'sites/sunny/local/cache-gd2/648a4f8c1b5f8885415bc80228800d87.png',
			extraire_attribut($balise, 'src'),
			'Une image + src parfois ca casse, va comprendre'
		);
	}

	#[DataProvider('providerBase64')]
	public function testBase64($expected, ...$args): void {
		$actual = extraire_attribut(...$args);
		$this->assertSame($expected, $actual);
	}

	public static function providerBase64(): array {
		return [
			'base64 #1' => [
				'expected' => '',
				'balise' => '<div class="base64" title="" ></div>',
				'attribut' => 'title',
			],
			'base64 #2' => [
				'expected' => '',
				'balise' => '<div class="base64" title="" ></div>',
				'attribut' => 'title',
			],

		];
	}
}
